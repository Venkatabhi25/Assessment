# -*- coding: utf-8 -*-
"""LVADSUSR129_VenaktaAbhishek_LAB3_FA

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1E3mRjygvnxljIaRIQlEN0uh5I5EJIoNv
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn.metrics import silhouette_score
from sklearn.preprocessing import StandardScaler,LabelEncoder
from sklearn.decomposition import PCA
import warnings
warnings.filterwarnings("ignore")
from sklearn.preprocessing import StandardScaler,LabelEncoder


df=pd.read_csv('/content/seeds.csv')

features = ['Area','Perimeter','Compactness','Length of kernel','Width of kernel','Asymmetry coefficient','Length of kernel groove']
X = df[features]
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)
pca = PCA(n_components=2)
X_pca = pca.fit_transform(X_scaled)


silhouette_scores = []
k_range = range(2, 11)

for k in k_range:
    kmeans = KMeans(n_clusters=k, random_state=42)
    kmeans.fit(X_scaled)
    silhouette_scores.append(silhouette_score(X_scaled, kmeans.labels_))
print(silhouette_scores)


plt.plot(k_range, silhouette_scores, marker='o')
plt.xlabel('Number of Clusters')
plt.ylabel('Silhouette Score')
plt.title('Silhouette Score vs Number of Clusters')
plt.show()


sse = []
for k in k_range:
    kmeans = KMeans(n_clusters=k, random_state=42)
    kmeans.fit(X_scaled)
    sse.append(kmeans.inertia_)

plt.plot(k_range, sse, marker='o')
plt.xlabel('Number of Clusters')
plt.ylabel('Sum of Squared Distances (SSE)')
plt.title('Elbow Method')
plt.show()


k = 3

kmeans = KMeans(n_clusters=k, random_state=42)
kmeans.fit(df)

clusters = kmeans.predict(df)


plt.scatter(df['Area'], df['Perimeter'], c=clusters, cmap='viridis')
plt.xlabel('Area')
plt.ylabel('Perimeter')
plt.title('K-means Clustering')
plt.show()