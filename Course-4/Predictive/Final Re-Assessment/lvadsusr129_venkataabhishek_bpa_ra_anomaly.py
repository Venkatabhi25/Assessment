# -*- coding: utf-8 -*-
"""LVADSUSR129_VENKATAABHISHEK_BPA_RA_Anomaly

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ht1og3XSbLd5G4hzDuCGWwOpnjwcLHpI
"""

from sklearn.ensemble import IsolationForest
import warnings
warnings.filterwarnings('ignore')
import matplotlib.pyplot as plt
from sklearn.preprocessing import LabelEncoder

import pandas as pd
df=pd.read_csv('/content/anomaly_train.csv')
df.head()

df.describe()

df.info()

df.isnull().sum()
#there are no null values in this dataset so no need to use fillna()
#df=df.fillna(method='ffill')

lab=LabelEncoder()
df['Type']=lab.fit_transform(df['Type'])
df['Location']=lab.fit_transform(df['Location'])

X=df
model = IsolationForest(n_estimators=100, contamination=0.1,max_features = 3, max_samples=10000, random_state=42)
model.fit(X)

y_prediction=model.predict(X)
print(y_prediction)

df['Anomaly_score']=model.decision_function(X)
df.head()

anomalies=df[df['Anomaly_score']<0]

lis=[]
for i in df['Anomaly_score']:
  if i<0:
    lis.append('Anomaly')
  else:
    lis.append('Not Anomaly')

df['anomaly prediction']=lis
df.head()

plt.scatter(df["User"], df["Anomaly_score"], label="Not Anomaly")
plt.scatter(anomalies["User"], anomalies["Anomaly_score"], color="r", label="Anomaly")

plt.xlabel("User")
plt.ylabel("anomaly_score")
plt.legend()
plt.show()

'''
"INSIGHTS"
by this above Scatter plot we can see that All the red colour dots are anamolies where there is a chance of happening fraud
for user
Hence we need to freeze these suspicious accounts immediately and notify the users
'''