# -*- coding: utf-8 -*-
"""LVADSUSR129_VenaktaAbhishek_LAB2_FA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xY1oN5yp_CaeCsXGW79ete2RuvFk7EeA
"""

import numpy as np
import pandas as pd
df=pd.read_csv('/content/auto-mpg.csv')
df.head()

df.describe()

df.info()

df.isnull().sum()

df.duplicated()

df.dropna(inplace=True)
df.isnull().sum()

df.shape

import seaborn as sns
sns.boxplot(df)

from scipy.stats import zscore
numeric_df = df.select_dtypes(include=[np.number])
z_scores = zscore(numeric_df)
abs_z_scores = np.abs(z_scores)
filtered_entries = (abs_z_scores < 3).all(axis=1)
df_cleaned = df[filtered_entries]
df_cleaned.head()

print("Original DataFrame:")
print(df.shape)
print("\nDataFrame after removing outliers:")
print(df_cleaned.shape)

df=df_cleaned

df.corr()

import seaborn as sns
sns.heatmap(df.corr(),annot=True)

import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import LabelEncoder, MinMaxScaler, StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, accuracy_score, confusion_matrix, recall_score, f1_score, precision_score
import warnings
warnings.filterwarnings("ignore")

le=LabelEncoder()
df['car name']=le.fit_transform(df['car name'])
df.head()

df.dtypes

from sklearn.model_selection import train_test_split
X = df.drop('mpg', axis=1)
y = df['mpg']
X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.3)
model = LinearRegression()
model = model.fit(X_train,y_train)
pred = model.predict(X_test)
pred

mse = mean_squared_error(y_test,pred)
print(f'MSE :{mse}')

rmse = np.sqrt(mse)
print(f'RMSE :{rmse}')

result = pd.DataFrame({
    'Actual' : y_test,
    'Pred' : pred
})
print(result)

plt.figure(figsize=(8, 6))
plt.scatter(y_test, pred)
plt.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()])
plt.xlabel('Actual Values')
plt.ylabel('Predicted Values')
plt.title('Actual vs Predicted')
plt.show()