# -*- coding: utf-8 -*-
"""LVADSUSR129-VENKATAABHISHEK-FA

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13_G2fwB7z4w59P8_ytDPtyLSdcz2l7P1
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import geopandas as gpd
import random
import warnings as wr
wr.filterwarnings('ignore')

#1
df=pd.read_csv("/content/Walmart_Dataset Python_Final_Assessment.csv")
#df.head()
print(df.describe())
print(df.info())

#2
df=df.drop_duplicates()
df.dropna()
df.head()

#3
print(df['Profit'].mean())
#insight: From this we can conclude avg profit amongst all categories
dff=df.groupby('Category')['Profit'].mean()
# This gives category wise avg profit values
dff=df.groupby('Category')['Sales'].median()
#This gives median sales value for every category
df1=df.groupby('Category')['Quantity'].mode()
#this gives the mode quantity values for every category
df1=df.groupby('Category')['Sales'].std()
#this std will give the deviation of sales amount form the mean
df1=df.groupby('Category')['Sales'].var()#variance

#4
dff=df.groupby('Category')['Profit'].mean().reset_index()
plt.figure(figsize=(18,10))
x=dff['Category']
y=dff['Profit']
plt.bar(x,y,color='orange')
plt.xlabel("Category")
plt.ylabel("Average Profits")
plt.show()#bar plot

#4
dff=df.groupby('Category')['Sales'].median().reset_index()
plt.figure(figsize=(18,10))
sns.lineplot(x="Category",y="Sales",marker='o',label="Median Sales",data=dff,linewidth=2)
#sns.lineplot(x="Category",y="Profit",marker='o',label="Average Profit",data=dff)
#we can these line plot for many comparisions
plt.xlabel("Category")
plt.legend()
plt.show()

#4
df1=df.groupby('Category')['Quantity'].std().reset_index()
plt.figure(figsize=(18,10))
sns.scatterplot(x='Category',y='Quantity',data=df1,marker='1',cmap='YlBuGn')
plt.xlabel("Category")
plt.ylabel("Quantity")
plt.legend()#scatterplot
plt.show()

#4
#df1=df.groupby('Category')['Quantity'].median().reset_index()
plt.figure(figsize=(18,10))
sns.histplot(dff,kde=True,color="Red")#histogram
plt.xlabel("Category")
plt.ylabel("Quantity")
plt.legend()
plt.show()

#4
plt.figure(figsize=(40,20))
plt.stackplot('Ship Date','Quantity',data=df)
plt.xlabel("Ship Date")
plt.ylabel("Quantity")#stackplot
plt.legend()
plt.show()

#5
df2=df.corr()
print(df2)
df2['Sales'].plot(kind='line', figsize=(8, 4), title='Sales')
plt.gca().spines[['top', 'right']].set_visible(False)
plt.xlabel('numerical quantities of data')

#6
plt.figure(figsize=(15,10))
sns.boxplot(dff,color="Red")
plt.xlabel("Category")
plt.ylabel("Quantity")
plt.legend()
plt.show()

'''Insights
here sales category has outliers there are more sales happened to those who maintained
higher quantites of inventories than average number of inventories stored by data
'''

#7
#Trend Analysis-1
#1
df1=df.groupby('Category')['Sales','Profit'].mean().reset_index()
df1['Sales'].plot(kind='line', figsize=(8, 4), title='Sales vs Profit')
df1['Profit'].plot(kind='line', figsize=(8, 4))
plt.xlabel("sales accross years")
plt.ylabel("sales and profits")

#yes there are some variations where sales are high but profits dipped

#7
#Trend Analysis-2
#2
plt.figure(figsize=(100,20))
plt.plot('Ship Date','Category',linewidth=1,data=df)
plt.xlabel("growth accross years")
plt.ylabel("Category")
plt.show()

#7
#customer Analysis-1
#1
df1=df.groupby('Order ID')['Order ID'].count()
df1=df1['Order ID'].sort()
df1.tail()

#7
#customer analysis-2
#2
df1=df.groupby('Order ID')['Order Date'].mean()
plt.figure(figsize=(18,10))
plt.plot('Order ID','Order Date',data=df1)
plt.xlabel("Order ID")
plt.ylabel("Order Date")
plt.show()

#7
#comprehensive analysis
#1.
'''
Quantities should be maintained efficiently
We have to place orders when dates on which the sales are high and reduce when low

'''
df1=df.groupby('Category')['Sales','Profit'].mean().reset_index()
df1['Sales'].plot(kind='line', figsize=(8, 4), title='Sales vs Profit')
df1['Profit'].plot(kind='line', figsize=(8, 4))
plt.xlabel("sales accross years")
plt.ylabel("sales and profits")

#2
'''
There are many undelying factors that influence sales and profits in various
geographic locations
this location vs Sales data can be used to target the customers who ordered most number of times
and Quantity of products that are avaiable with the vendors
'''
df1=df.groupby('Geography')['Quantity'].mean().reset_index()
df1['Quantity'].plot(kind='hist', bins=20, title='Quantity')
plt.gca().spines[['top', 'right',]].set_visible(False)

#3
'''
We can see the trend analysis to acquire loyal customers by customer loyality and
aquisition
the plot shows the customers from certain locations have high customer retention rate than others
and luxary category items are purchased more in some geological locations
These trends tells us all about customer retention
'''
plt.figure(figsize=(100,20))
plt.plot('Ship Date','Category',linewidth=1,data=df)
plt.xlabel("growth accross years")
plt.ylabel("Category")
plt.show()